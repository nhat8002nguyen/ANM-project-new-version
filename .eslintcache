[{"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/index.js":"1","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/App.js":"2","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/reportWebVitals.js":"3","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/elements/Header.js":"4","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoEachMethod.js":"5","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoSameKey.js":"6","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoSameMethod.js":"7","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/Encrypt.js":"8","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/Decrypt.js":"9","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/CaesarEncrypt.js":"10","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/RailFenceEncrypt.js":"11","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/CaesarDecrypt.js":"12","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/RailFenceDecrypt.js":"13","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/DecryptSameKey.js":"14","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/DecryptSameMethod.js":"15"},{"size":500,"mtime":1608015449940,"results":"16","hashOfConfig":"17"},{"size":1504,"mtime":1608305189211,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608014355144,"results":"19","hashOfConfig":"17"},{"size":794,"mtime":1608267131714,"results":"20","hashOfConfig":"17"},{"size":6489,"mtime":1608267118718,"results":"21","hashOfConfig":"17"},{"size":6123,"mtime":1608284737612,"results":"22","hashOfConfig":"17"},{"size":6018,"mtime":1609259632680,"results":"23","hashOfConfig":"17"},{"size":508,"mtime":1608192543895,"results":"24","hashOfConfig":"17"},{"size":474,"mtime":1608192543787,"results":"25","hashOfConfig":"17"},{"size":438,"mtime":1608192543759,"results":"26","hashOfConfig":"17"},{"size":1255,"mtime":1608192543971,"results":"27","hashOfConfig":"17"},{"size":217,"mtime":1608192543727,"results":"28","hashOfConfig":"17"},{"size":1740,"mtime":1608192543931,"results":"29","hashOfConfig":"17"},{"size":635,"mtime":1608192543823,"results":"30","hashOfConfig":"17"},{"size":1788,"mtime":1608192543859,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"qlx1oc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/index.js",[],["66","67"],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/App.js",["68"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/elements/Header\";\nimport CryptoEachMethod from \"./components/functionUIs/CryptoEachMethod\";\nimport CryptoSameKey from \"./components/functionUIs/CryptoSameKey\";\nimport CryptoSameMethod from \"./components/functionUIs/CryptoSameMethod\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  appBody: {\n    width: \"80%\",\n    margin: \"auto\",\n    marginTop: theme.spacing(5),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Header></Header>\n      <div className={classes.root}>\n        <Grid className={classes.appBody} container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <Paper className={classes.paper}>\n              <CryptoEachMethod />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper className={classes.paper}>\n              <CryptoSameKey />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper className={classes.paper}>\n              <CryptoSameMethod />\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/reportWebVitals.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/elements/Header.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoEachMethod.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoSameKey.js",["69"],"import React from \"react\";\nimport {\n  Typography,\n  FormControl,\n  Input,\n  Button,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DecryptSameKey from \"../../algorithms/DecryptSameKey\";\n\nimport { saveAs, encodeBase64 } from \"@progress/kendo-file-saver\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: \"#4b8eeb\",\n    color: \"white\",\n    borderRadius: \"10px\",\n    width: \"100%\",\n    height: \"50px\",\n  },\n  formInput: { marginTop: \"50px\", width: \"80%\" },\n  chooseMethod: {\n    marginTop: theme.spacing(3),\n    textAlign: \"left\",\n  },\n  input: {\n    marginBottom: theme.spacing(3),\n  },\n  buttonDec: {\n    width: \"30%\",\n    marginTop: theme.spacing(2),\n    backgroundColor: \"#4b8eeb\",\n    color: \"white\",\n    \" & :hover\": {\n      color: \"#4b8eeb\",\n    },\n    margin: \"auto\",\n  },\n\n  body1: {\n    color: \"#4b8eeb\",\n  },\n  output: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function CryptoSameKey(props) {\n  const classes = useStyles();\n\n  const [caesarCipher, setCaesarCipher] = React.useState(\"\");\n  const [railFenceCipher, setRailFenceCipher] = React.useState(\"\");\n  const [combCipher, setCombCipher] = React.useState(\"\");\n  const [caesarFile, setCaesarFile] = React.useState(\"\");\n  const [railFenceFile, setRailFenceFile] = React.useState(\"\");\n  const [combFile, setCombFile] = React.useState(\"\");\n\n  const [output, setOutput] = React.useState(\"\");\n\n  function onFileChange1(e) {\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      const text = e.target.result;\n\n      setCaesarCipher(\"\");\n      setCaesarFile(text);\n\n      console.log(\"text in file: \" + text);\n    };\n    if (e.target.files[0]) {\n      reader.readAsText(e.target.files[0]);\n    }\n\n    // e.target.value = null; Xoa file\n  }\n\n  function onFileChange2(e) {\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      const text = e.target.result;\n\n      setRailFenceCipher(\"\");\n      setRailFenceFile(text);\n\n      console.log(\"text in file: \" + text);\n    };\n    if (e.target.files[0]) {\n      reader.readAsText(e.target.files[0]);\n    }\n\n    // e.target.value = null; Xoa file\n  }\n\n  function onFileChange3(e) {\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      const text = e.target.result;\n\n      setCombCipher(\"\");\n      setCombFile(text);\n\n      console.log(\"text in file: \" + text);\n    };\n    if (e.target.files[0]) {\n      reader.readAsText(e.target.files[0]);\n    }\n\n    // e.target.value = null; Xoa file\n  }\n\n  const handleDecryptSameKey = () => {\n    if (\n      (!caesarCipher && !caesarFile) ||\n      (!railFenceCipher && !railFenceFile) ||\n      (!combCipher && !combFile)\n    ) {\n      alert(\"Input error\");\n      return null;\n    } else {\n      try {\n        const result = DecryptSameKey(\n          caesarCipher\n            ? caesarCipher\n            : caesarFile.substring(0, caesarFile.length - 1),\n          railFenceCipher\n            ? railFenceCipher\n            : railFenceFile.substring(0, railFenceFile.length - 1),\n          combCipher ? combCipher : combFile.substring(0, combFile.length - 1)\n        );\n        const resultText =\n          \"plainText: \" + result.plainText + \"\\n\" + \"Key: \" + result.key;\n\n        if (caesarFile || railFenceFile || combFile) {\n          try {\n            const dataURI =\n              \"data:text/plain;base64,\" + encodeBase64(resultText);\n            saveAs(dataURI, \"undefined.txt\");\n          } catch (error) {\n            console.log(error);\n          }\n        } else {\n          setOutput(resultText);\n        }\n      } catch (e) {\n        alert(\"Don't exist output!\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <Typography variant=\"h5\">Crypto Same Key</Typography>\n      </div>\n      <FormControl className={classes.formInput}>\n        <div className={classes.input}>\n          <Typography variant=\"body1\" align=\"left\" className={classes.body1}>\n            Enter Caesar Cipher:{\" \"}\n          </Typography>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Caesar Cipher\"\n            onChange={(e) => {\n              setCaesarCipher(e.target.value);\n              setCaesarFile(\"\");\n            }}\n            value={caesarCipher}\n          />\n          <Input type=\"file\" onChange={onFileChange1} />\n        </div>\n        <div className={classes.input}>\n          <Typography variant=\"body1\" align=\"left\" className={classes.body1}>\n            Enter Rail Fence Cipher:{\" \"}\n          </Typography>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Rail Fence\"\n            onChange={(e) => {\n              setRailFenceCipher(e.target.value);\n              setRailFenceFile(\"\");\n            }}\n            value={railFenceCipher}\n          />\n          <Input type=\"file\" onChange={onFileChange2} />\n        </div>\n\n        <div className={classes.input}>\n          <Typography variant=\"body1\" align=\"left\" className={classes.body1}>\n            Enter Combination Cipher:{\" \"}\n          </Typography>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Combination\"\n            onChange={(e) => {\n              setCombCipher(e.target.value);\n              setCombFile(\"\");\n            }}\n            value={combCipher}\n          />\n          <Input type=\"file\" onChange={onFileChange3} />\n        </div>\n        <Button\n          onClick={handleDecryptSameKey}\n          className={classes.buttonDec}\n          type=\"submit\"\n        >\n          Decrypt\n        </Button>\n        <div className={classes.output}>\n          <Typography variant=\"body1\" align=\"left\">\n            Decryption output\n          </Typography>\n          <TextareaAutosize\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\n            id=\"output\"\n            rowsMin=\"4\"\n            rowsMax=\"4\"\n            aria-label=\"empty textarea\"\n            readOnly\n            value={output}\n          />\n        </div>\n      </FormControl>\n    </div>\n  );\n}\n","/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/components/functionUIs/CryptoSameMethod.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/Encrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/Decrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/CaesarEncrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/RailFenceEncrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/CaesarDecrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/RailFenceDecrypt.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/DecryptSameKey.js",[],"/home/nhatnguyen/Documents/cryptoWebApp/crypto-web-app/src/algorithms/DecryptSameMethod.js",["70","71","72","73","74"],"import RailFenceEach8LetterDecrypt from \"./RailFenceDecrypt\";\nimport CaesarDecrypt from \"./CaesarDecrypt\";\nimport Decrypt from \"./Decrypt\";\n\nexport default function DecryptSameMethod(cryptoMethod, cipherTexts) {\n  if (cipherTexts.length <= 1) return null;\n  var plainTexts = [];\n  var possibleOutcomes = [];\n  if (cryptoMethod === \"Caesar Cipher\") {\n    for (var i = 0; i < cipherTexts.length; i++) {\n      plainTexts[i] = [];\n      for (var key = 0; key < 26; key++) {\n        plainTexts[i][key] = CaesarDecrypt(key, cipherTexts[i]);\n      }\n    }\n  } else if (cryptoMethod === \"Rail Fence\") {\n    for (var i = 0; i < cipherTexts.length; i++) {\n      plainTexts[i] = [];\n      for (var key = 2; key <= 7; key++) {\n        plainTexts[i][key] = RailFenceEach8LetterDecrypt(key, cipherTexts[i]);\n      }\n    }\n  } else {\n    for (var i = 0; i < cipherTexts.length; i++) {\n      plainTexts[i] = [];\n      for (var key = 2; key <= 7; key++) {\n        plainTexts[i][key] = Decrypt(\"Combination\", key, cipherTexts[i]);\n      }\n    }\n  }\n  DecryptSameMethodRecursive(plainTexts, possibleOutcomes, []);\n  return possibleOutcomes;\n}\n\nfunction DecryptSameMethodRecursive(plainTexts, possibleOutcomes, currentKeys) {\n  if (currentKeys.length == plainTexts.length) {\n    possibleOutcomes.push({\n      keys: currentKeys,\n      plainText: plainTexts[0][currentKeys[0]],\n    });\n    return;\n  }\n\n  for (var key in plainTexts[currentKeys.length]) {\n    var plainText = plainTexts[currentKeys.length][key];\n    if (currentKeys.length > 0) {\n      if (\n        plainText !==\n        plainTexts[currentKeys.length - 1][currentKeys[currentKeys.length - 1]]\n      )\n        continue;\n    }\n    DecryptSameMethodRecursive(\n      plainTexts,\n      possibleOutcomes,\n      currentKeys.concat([key])\n    );\n  }\n}\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":136,"column":51,"nodeType":"85","messageId":"86","endLine":136,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":17,"column":14,"nodeType":"81","messageId":"89","endLine":17,"endColumn":15},{"ruleId":"87","severity":1,"message":"90","line":19,"column":16,"nodeType":"81","messageId":"89","endLine":19,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":24,"column":14,"nodeType":"81","messageId":"89","endLine":24,"endColumn":15},{"ruleId":"87","severity":1,"message":"90","line":26,"column":16,"nodeType":"81","messageId":"89","endLine":26,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":36,"column":26,"nodeType":"85","messageId":"93","endLine":36,"endColumn":28},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-redeclare","'i' is already defined.","redeclared","'key' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-global-assign","no-unsafe-negation"]